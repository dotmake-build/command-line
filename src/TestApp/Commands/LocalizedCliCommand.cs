using DotMake.CommandLine;

namespace TestApp.Commands
{
    #region LocalizedCliCommand

    // Localizing commands, options and arguments is supported.
    // You can specify a `nameof` operator expression with a resource property (generated by resx) in the attribute's argument (for `string` types only)
    // and the source generator will smartly use the resource property accessor as the value of the argument so that it can localize at runtime.
    // If the property in the `nameof` operator expression does not point to a resource property, then the name of that property will be used as usual.
    // The reason we use `nameof` operator is that attributes in `.NET` only accept compile-time constants and you get `CS0182` error if not,
    // so specifying resource property directly is not possible as it's not a compile-time constant but it's a static property access.
    
    [CliCommand(Description = nameof(TestResources.CommandDescription))]
    internal class LocalizedCliCommand
    {
        [CliOption(Description = nameof(TestResources.OptionDescription))]
        public string Option1 { get; set; } = "DefaultForOption1";

        [CliArgument(Description = nameof(TestResources.ArgumentDescription))]
        public string Argument1 { get; set; }
    }

    #endregion
}
