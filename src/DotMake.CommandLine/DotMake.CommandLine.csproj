<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>net8.0;netstandard2.0</TargetFrameworks>
    <LangVersion>10.0</LangVersion>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>

    <!--
      IsTrimmable to enable trim warnings
      https://learn.microsoft.com/en-us/dotnet/core/deploying/trimming/prepare-libraries-for-trimming?pivots=dotnet-6-0#enable-project-specific-trimming    

      IsAotCompatible to enable trim warnings (also enables IsTrimmable but it's only for net.8.0)
      https://learn.microsoft.com/en-us/dotnet/core/deploying/native-aot/?tabs=net8plus%2Cwindows#aot-compatibility-analyzers
    -->
    <IsTrimmable Condition="$([MSBuild]::IsTargetFrameworkCompatible('$(TargetFramework)', 'net6.0'))">true</IsTrimmable>
    <IsAotCompatible Condition="$([MSBuild]::IsTargetFrameworkCompatible('$(TargetFramework)', 'net7.0'))">true</IsAotCompatible>

    <!-- NuGet Package Information (common ones are in Directory.Build.props) -->
    <!-- Description is used for assembly and NuGet metadata -->
    <Description>Declarative syntax for System.CommandLine via attributes for easy, fast, strongly-typed (no reflection) usage. Includes a source generator which automagically converts your classes to CLI commands and properties to CLI options or CLI arguments.</Description>
    <PackageTags>command-line CLI console System.CommandLine declarative attributes parsing command argument option generator</PackageTags>
    <PackageReleaseNotes>
      - Updated to latest daily build 2.0.0-beta5.25174.1 of System.CommandLine.
      - Fixed: On Unix-like platforms, Console.ForegroundColor and Console.BackgroundColor is unset/unknown so prevent setting them to
        ConsoleColor.Gray and ConsoleColor.Black on non-Windows platforms when theme color is null (unset).
        Also will try to fix color visibility by making some assumptions (e.g. on OSX background color is white)
        as it's impossible to detect terminal colors.
      - Added: [NO_COLOR](https://no-color.org/) support, i.e. if `NO_COLOR` environment variable is set, the colors will be disabled.
      - Improved: Added CustomizeLayout method in CliHelpBuilder to mimic the base class HelpBuilder in System.Commandline.
        A delegate can be passed to customize the default layout sections in help output.
      - Fixed: System.CommandLine.RootCommand returned by Cli.GetConfiguration should have correct parents. This did not
        effect the working of Cli, however for metadata purpose we will populate accurate command hierarchy even if
        Cli.GetConfiguration is called for a command which is in the middle of the hierarchy.
    </PackageReleaseNotes>
  </PropertyGroup>

  <Import Project="..\DotMake.CommandLine.Shared\DotMake.CommandLine.Shared.projitems" Label="Shared" />

  <ItemGroup>
    <!--<PackageReference Include="System.CommandLine" Version="2.0.0-beta4.22272.1" />-->
    <!--
      Using the latest version package published on DotNet Daily Builds feed,
      as it's not on official nuget feed, we directly reference the DLL inside the package so that it's also bundled in our package.
      https://blog.maartenballiauw.be/post/2020/04/22/referencing-specific-assembly-nuget-package.html
    -->
    <PackageReference Include="System.CommandLine" Version="2.0.0-beta5.25174.1">
      <GeneratePathProperty>true</GeneratePathProperty>
      <IncludeAssets>None</IncludeAssets>
      <ExcludeAssets>All</ExcludeAssets>
      <PrivateAssets>None</PrivateAssets>
    </PackageReference>
    <PackageReference Include="System.Memory" version="4.5.4" Condition="'$(TargetFramework)' == 'netstandard2.0'" />
    <Reference Include="System.CommandLine">
      <HintPath>$(PkgSystem_CommandLine)\lib\$(TargetFramework)\System.CommandLine.dll</HintPath>
    </Reference>
    <None Include="$(OutputPath)\$(TargetFramework)\**\System.CommandLine*" Pack="true" PackagePath="lib/$(TargetFramework)" Visible="false" />
  </ItemGroup>

  <ItemGroup>
    <!-- 
      https://github.com/dotnet/roslyn/issues/55229 
      https://stackoverflow.com/a/69193922
    -->
    <!-- Ensure that the source generator is built together with this project -->
    <ProjectReference Include="..\$(MSBuildProjectName).SourceGeneration\$(MSBuildProjectName).SourceGeneration.csproj">
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
    </ProjectReference>
    <!-- Package the generator in the analyzer directory of the nuget package -->
    <None Include="..\$(MSBuildProjectName).SourceGeneration\$(OutputPath)\netstandard2.0\*.dll" Pack="true" PackagePath="analyzers/dotnet/cs" Visible="false" />
    <!--
      Package MSBuild .props file in the nuget package
      https://learn.microsoft.com/en-us/nuget/concepts/msbuild-props-and-targets
    -->
    <None Include="nuget.props" Pack="true" PackagePath="build/$(PackageId).props" Visible="false" />
  </ItemGroup>

  <ItemGroup>
    <None Remove="*.DotSettings" />
  </ItemGroup>

</Project>
