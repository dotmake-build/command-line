<!DOCTYPE html []><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>CliBindingContext Class</title><meta name="Title" content="CliBindingContext" /><meta name="Help.Id" content="T:DotMake.CommandLine.CliBindingContext" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="DotMake.CommandLine" /><meta name="guid" content="T_DotMake_CommandLine_CliBindingContext" /><meta name="Description" content="Context used for binding of commands to definition classes." /><meta name="tocFile" content="../toc/IDAA.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div class="level-item"><img style="height: 64px;" src="../icons/logo128.png" /></div><div id="DocumentationTitle" class="level-item">DotMake Command-Line Documentation</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div id="ContentContainer" class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="Resizer" class="is-hidden"></div><div id="TopicContent" class="column content is-7"><h1>Cli<wbr />Binding<wbr />Context Class</h1><div class="summary">
            Context used for binding of commands to definition classes.
            </div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Definition</h2><div id="IDBSection"><strong>Namespace:</strong> <a href="N_DotMake_CommandLine.htm">DotMake.CommandLine</a><br /><strong>Assembly:</strong> DotMake.CommandLine (in DotMake.CommandLine.dll) Version: 2.6.7<div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs"><span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">CliBindingContext</span></code></pre></div></div><dl class="inheritanceHierarchy"><dt>Inheritance</dt><dd><a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <span class="selflink">CliBindingContext</span></dd></dl></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Constructors</h2><div id="IDAEASection"><table id="ConstructorList" class="table is-hoverable"><tr><td><a href="M_DotMake_CommandLine_CliBindingContext__ctor.htm">CliBindingContext</a></td><td>Initializes a new instance of the <span class="selflink">CliBindingContext</span> class</td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Properties</h2><div id="IDJEASection"><table id="PropertyList" class="table is-hoverable"><tr><td><a href="P_DotMake_CommandLine_CliBindingContext_BinderMap.htm">BinderMap</a></td><td>
            Map for looking up command binder delegates by definition classes, which are set by the source generator to be called from <a href="M_DotMake_CommandLine_CliBindingContext_Bind__1.htm">Bind<span id="LST3F4A04B1_0" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TDefinition<span id="LST3F4A04B1_1" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(ParseResult, Boolean)</a> method.
            </td></tr><tr><td><a href="P_DotMake_CommandLine_CliBindingContext_CommandMap.htm">CommandMap</a></td><td>
            Map for looking up definition classes by commands, which are set by the source generator to be called from <a href="M_DotMake_CommandLine_CliBindingContext_IsCalled__1.htm">IsCalled<span id="LST3F4A04B1_2" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TDefinition<span id="LST3F4A04B1_3" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(ParseResult)</a> or <a href="M_DotMake_CommandLine_CliBindingContext_Contains__1.htm">Contains<span id="LST3F4A04B1_4" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TDefinition<span id="LST3F4A04B1_5" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(ParseResult)</a> methods.
            </td></tr><tr><td><a href="P_DotMake_CommandLine_CliBindingContext_CreatorMap.htm">CreatorMap</a></td><td>
            Map for looking up instance creators by definition classes, which are set by the source generator to be called from <a href="M_DotMake_CommandLine_CliBindingContext_Bind__1.htm">Bind<span id="LST3F4A04B1_6" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TDefinition<span id="LST3F4A04B1_7" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(ParseResult, Boolean)</a> method.
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Methods</h2><div id="IDCEASection"><table id="MethodList" class="table is-hoverable"><tr><td><a href="M_DotMake_CommandLine_CliBindingContext_Bind.htm">Bind(ParseResult, Type, Boolean)</a></td><td>
            Creates a new instance of the command definition class and binds/populates the properties from the parse result.
            <p>
            Note that binding will be done only once per parse result and definition class, so calling this method consecutively for
            the same parse result and the same definition class will return the cached result.
            </p><p>
            If the command line input does not contain the indicated definition class (as self or as a parent), this method will return <span class="keyword"><span id="LST3F4A04B1_8" data-languageSpecificText="cpp=nullptr|vb=Nothing|nu=null"></span></span>
            unless <span class="parameter">returnEmpty</span> is set to <span class="keyword"><span id="LST3F4A04B1_9" data-languageSpecificText="vb=True|nu=true"></span></span>, in that case it will return an empty instance with default property values.
            </p></td></tr><tr><td><a href="M_DotMake_CommandLine_CliBindingContext_Bind__1.htm">Bind<span id="LST3F4A04B1_10" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TDefinition<span id="LST3F4A04B1_11" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(ParseResult, Boolean)</a></td><td>
            Creates a new instance of the command definition class and binds/populates the properties from the parse result.
            <p>
            Note that binding will be done only once per parse result and definition class, so calling this method consecutively for
            the same parse result and the same definition class will return the cached result.
            </p><p>
            If the command line input does not contain the indicated definition class (as self or as a parent), this method will return <span class="keyword"><span id="LST3F4A04B1_12" data-languageSpecificText="cpp=nullptr|vb=Nothing|nu=null"></span></span>
            unless <span class="parameter">returnEmpty</span> is set to <span class="keyword"><span id="LST3F4A04B1_13" data-languageSpecificText="vb=True|nu=true"></span></span>, in that case it will return an empty instance with default property values.
            </p></td></tr><tr><td><a href="M_DotMake_CommandLine_CliBindingContext_BindAll.htm">BindAll</a></td><td>
            Creates a new instance of the definition class for all contained commands (self and parents) and binds/populates the properties from the parse result.
            <p>
            Note that binding will be done only once per parse result and definition class, so calling this method consecutively for
            the same parse result and the same definition class will return the cached result.
            </p></td></tr><tr><td><a href="M_DotMake_CommandLine_CliBindingContext_BindCalled.htm">BindCalled</a></td><td>
            Creates a new instance of the definition class for called command and binds/populates the properties from the parse result.
            <p>
            Note that binding will be done only once per parse result and definition class, so calling this method consecutively for
            the same parse result and the same definition class will return the cached result.
            </p></td></tr><tr><td><a href="M_DotMake_CommandLine_CliBindingContext_Contains.htm">Contains(ParseResult, Type)</a></td><td>
            Checks if the command line input contains the indicated definition class (as self or as a parent).
            </td></tr><tr><td><a href="M_DotMake_CommandLine_CliBindingContext_Contains__1.htm">Contains<span id="LST3F4A04B1_14" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TDefinition<span id="LST3F4A04B1_15" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(ParseResult)</a></td><td>
            Checks if the command line input contains the indicated definition class (as self or as a parent).
            </td></tr><tr><td><a href="M_DotMake_CommandLine_CliBindingContext_Create.htm">Create(Type)</a></td><td>
            Creates a new instance of the command definition class but without any binding.
            This is useful for example when you need to instantiate a definition class when using dependency injection.
            </td></tr><tr><td><a href="M_DotMake_CommandLine_CliBindingContext_Create__1.htm">Create<span id="LST3F4A04B1_16" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TDefinition<span id="LST3F4A04B1_17" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span><span id="LST3F4A04B1_18" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a></td><td>
            Creates a new instance of the command definition class but without any binding.
            This is useful for example when you need to instantiate a definition class when using dependency injection.
            </td></tr><tr><td><a href="M_DotMake_CommandLine_CliBindingContext_GetArgumentParser__1.htm">GetArgumentParser<span id="LST3F4A04B1_19" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TArgument<span id="LST3F4A04B1_20" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(Func<span id="LST3F4A04B1_21" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>String, TArgument<span id="LST3F4A04B1_22" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Gets an argument parser method for an argument type.
            <p>
            This is mainly used for adding support for binding custom types which have a public constructor
            or a static <span class="code">Parse</span> method with a string parameter (other parameters, if any, should be optional).
            </p></td></tr><tr><td><a href="M_DotMake_CommandLine_CliBindingContext_GetArgumentParser__2.htm">GetArgumentParser<span id="LST3F4A04B1_23" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TCollection, TItem<span id="LST3F4A04B1_24" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(Func<span id="LST3F4A04B1_25" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Array, TCollection<span id="LST3F4A04B1_26" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LST3F4A04B1_27" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>String, TItem<span id="LST3F4A04B1_28" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Gets an argument parser method for an argument type, if it's a collection type.
            <p>
            This is mainly used for adding support for all <a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1" target="_blank" rel="noopener noreferrer">IEnumerable<span id="LST3F4A04B1_29" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST3F4A04B1_30" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a> compatible types which have
            a public constructor with a <a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1" target="_blank" rel="noopener noreferrer">IEnumerable<span id="LST3F4A04B1_31" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST3F4A04B1_32" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a> or <a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1" target="_blank" rel="noopener noreferrer">IList<span id="LST3F4A04B1_33" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST3F4A04B1_34" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a> parameter (other parameters, if any, should be optional).
            </p></td></tr><tr><td><a href="M_DotMake_CommandLine_CliBindingContext_GetValue.htm">GetValue(ParseResult, Argument)</a></td><td>
            Gets the parsed or default value for the specified argument.
            <p>
            Extended version for DotMake CLI which can bind custom classes,
            does not fall back to internal ArgumentConverter.GetDefaultValue which does not support all IList compatible types.
            </p></td></tr><tr><td><a href="M_DotMake_CommandLine_CliBindingContext_GetValue_1.htm">GetValue(ParseResult, Directive)</a></td><td>
            Gets the parsed or default value for the specified directive.
            <p>
            Extended version for DotMake CLI which can bind custom classes,
            does not fall back to internal ArgumentConverter.GetDefaultValue which does not support all IList compatible types.
            </p></td></tr><tr><td><a href="M_DotMake_CommandLine_CliBindingContext_GetValue_2.htm">GetValue(ParseResult, Option)</a></td><td>
            Gets the parsed or default value for the specified option.
            <p>
            Extended version for DotMake CLI which can bind custom classes,
            does not fall back to internal ArgumentConverter.GetDefaultValue which does not support all IList compatible types.
            </p></td></tr><tr><td><a href="M_DotMake_CommandLine_CliBindingContext_GetValue__1.htm">GetValue<span id="LST3F4A04B1_35" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST3F4A04B1_36" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(ParseResult, Argument)</a></td><td> </td></tr><tr><td><a href="M_DotMake_CommandLine_CliBindingContext_GetValue__1_1.htm">GetValue<span id="LST3F4A04B1_37" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST3F4A04B1_38" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(ParseResult, Directive)</a></td><td>
            Gets the parsed or default value for the specified directive.
            <p>
            Extended version for DotMake CLI which can bind custom classes,
            does not fall back to internal ArgumentConverter.GetDefaultValue which does not support all IList compatible types.
            </p></td></tr><tr><td><a href="M_DotMake_CommandLine_CliBindingContext_GetValue__1_2.htm">GetValue<span id="LST3F4A04B1_39" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST3F4A04B1_40" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(ParseResult, Option)</a></td><td> </td></tr><tr><td><a href="M_DotMake_CommandLine_CliBindingContext_IsCalled.htm">IsCalled(ParseResult, Type)</a></td><td>
            Checks if the command line input is for the indicated definition class.
            </td></tr><tr><td><a href="M_DotMake_CommandLine_CliBindingContext_IsCalled__1.htm">IsCalled<span id="LST3F4A04B1_41" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TDefinition<span id="LST3F4A04B1_42" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(ParseResult)</a></td><td>
            Checks if the command line input is for the indicated definition class.
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4>Reference</h4><div><a href="N_DotMake_CommandLine.htm">DotMake.CommandLine Namespace</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Definition</a></li><li><a class="quickLink">Constructors</a></li><li><a class="quickLink">Properties</a></li><li><a class="quickLink">Methods</a></li><li><a class="quickLink">See Also</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div id="FooterContent" class="column"><p>Copyright © 2023-2025 DotMake</p> 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script></body></html>